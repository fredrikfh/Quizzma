/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProcessingDefinitionsAnswer } from './ProcessingDefinitionsAnswer';
import {
    ProcessingDefinitionsAnswerFromJSON,
    ProcessingDefinitionsAnswerFromJSONTyped,
    ProcessingDefinitionsAnswerToJSON,
    ProcessingDefinitionsAnswerToJSONTyped,
} from './ProcessingDefinitionsAnswer';

/**
 * 
 * @export
 * @interface AnswerTopic
 */
export interface AnswerTopic {
    /**
     * 
     * @type {ProcessingDefinitionsAnswer}
     * @memberof AnswerTopic
     */
    answer: ProcessingDefinitionsAnswer;
    /**
     * 
     * @type {string}
     * @memberof AnswerTopic
     */
    topicId: string;
}

/**
 * Check if a given object implements the AnswerTopic interface.
 */
export function instanceOfAnswerTopic(value: object): value is AnswerTopic {
    if (!('answer' in value) || value['answer'] === undefined) return false;
    if (!('topicId' in value) || value['topicId'] === undefined) return false;
    return true;
}

export function AnswerTopicFromJSON(json: any): AnswerTopic {
    return AnswerTopicFromJSONTyped(json, false);
}

export function AnswerTopicFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnswerTopic {
    if (json == null) {
        return json;
    }
    return {
        
        'answer': ProcessingDefinitionsAnswerFromJSON(json['answer']),
        'topicId': json['topic_id'],
    };
}

export function AnswerTopicToJSON(json: any): AnswerTopic {
    return AnswerTopicToJSONTyped(json, false);
}

export function AnswerTopicToJSONTyped(value?: AnswerTopic | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'answer': ProcessingDefinitionsAnswerToJSON(value['answer']),
        'topic_id': value['topicId'],
    };
}

