/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { QuestionPublicExtended } from './QuestionPublicExtended';
import {
    QuestionPublicExtendedFromJSON,
    QuestionPublicExtendedFromJSONTyped,
    QuestionPublicExtendedToJSON,
    QuestionPublicExtendedToJSONTyped,
} from './QuestionPublicExtended';

/**
 * 
 * @export
 * @interface QuizPublicExtended
 */
export interface QuizPublicExtended {
    /**
     * 
     * @type {string}
     * @memberof QuizPublicExtended
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof QuizPublicExtended
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof QuizPublicExtended
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof QuizPublicExtended
     */
    userId: string;
    /**
     * 
     * @type {Array<QuestionPublicExtended>}
     * @memberof QuizPublicExtended
     */
    questions?: Array<QuestionPublicExtended>;
}

/**
 * Check if a given object implements the QuizPublicExtended interface.
 */
export function instanceOfQuizPublicExtended(value: object): value is QuizPublicExtended {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    return true;
}

export function QuizPublicExtendedFromJSON(json: any): QuizPublicExtended {
    return QuizPublicExtendedFromJSONTyped(json, false);
}

export function QuizPublicExtendedFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuizPublicExtended {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'id': json['id'],
        'userId': json['user_id'],
        'questions': json['questions'] == null ? undefined : ((json['questions'] as Array<any>).map(QuestionPublicExtendedFromJSON)),
    };
}

export function QuizPublicExtendedToJSON(json: any): QuizPublicExtended {
    return QuizPublicExtendedToJSONTyped(json, false);
}

export function QuizPublicExtendedToJSONTyped(value?: QuizPublicExtended | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'id': value['id'],
        'user_id': value['userId'],
        'questions': value['questions'] == null ? undefined : ((value['questions'] as Array<any>).map(QuestionPublicExtendedToJSON)),
    };
}

