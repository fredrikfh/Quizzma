/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Summary
 */
export interface Summary {
    /**
     * 
     * @type {string}
     * @memberof Summary
     */
    questionId: string;
    /**
     * 
     * @type {string}
     * @memberof Summary
     */
    topicId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Summary
     */
    summaryText: string;
    /**
     * 
     * @type {string}
     * @memberof Summary
     */
    emoji?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Summary
     */
    score?: number;
    /**
     * 
     * @type {string}
     * @memberof Summary
     */
    algorithm: string;
    /**
     * 
     * @type {string}
     * @memberof Summary
     */
    id?: string;
}

/**
 * Check if a given object implements the Summary interface.
 */
export function instanceOfSummary(value: object): value is Summary {
    if (!('questionId' in value) || value['questionId'] === undefined) return false;
    if (!('summaryText' in value) || value['summaryText'] === undefined) return false;
    if (!('algorithm' in value) || value['algorithm'] === undefined) return false;
    return true;
}

export function SummaryFromJSON(json: any): Summary {
    return SummaryFromJSONTyped(json, false);
}

export function SummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): Summary {
    if (json == null) {
        return json;
    }
    return {
        
        'questionId': json['question_id'],
        'topicId': json['topic_id'] == null ? undefined : json['topic_id'],
        'summaryText': json['summary_text'],
        'emoji': json['emoji'] == null ? undefined : json['emoji'],
        'score': json['score'] == null ? undefined : json['score'],
        'algorithm': json['algorithm'],
        'id': json['id'] == null ? undefined : json['id'],
    };
}

export function SummaryToJSON(json: any): Summary {
    return SummaryToJSONTyped(json, false);
}

export function SummaryToJSONTyped(value?: Summary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'question_id': value['questionId'],
        'topic_id': value['topicId'],
        'summary_text': value['summaryText'],
        'emoji': value['emoji'],
        'score': value['score'],
        'algorithm': value['algorithm'],
        'id': value['id'],
    };
}

