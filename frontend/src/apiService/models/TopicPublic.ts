/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Answer } from './Answer';
import {
    AnswerFromJSON,
    AnswerFromJSONTyped,
    AnswerToJSON,
    AnswerToJSONTyped,
} from './Answer';

/**
 * 
 * @export
 * @interface TopicPublic
 */
export interface TopicPublic {
    /**
     * 
     * @type {string}
     * @memberof TopicPublic
     */
    algorithm: string;
    /**
     * 
     * @type {string}
     * @memberof TopicPublic
     */
    questionId: string;
    /**
     * 
     * @type {string}
     * @memberof TopicPublic
     */
    label: string;
    /**
     * 
     * @type {string}
     * @memberof TopicPublic
     */
    topic: string;
    /**
     * 
     * @type {number}
     * @memberof TopicPublic
     */
    score?: number;
    /**
     * 
     * @type {string}
     * @memberof TopicPublic
     */
    id: string;
    /**
     * 
     * @type {Array<Answer>}
     * @memberof TopicPublic
     */
    answers: Array<Answer>;
}

/**
 * Check if a given object implements the TopicPublic interface.
 */
export function instanceOfTopicPublic(value: object): value is TopicPublic {
    if (!('algorithm' in value) || value['algorithm'] === undefined) return false;
    if (!('questionId' in value) || value['questionId'] === undefined) return false;
    if (!('label' in value) || value['label'] === undefined) return false;
    if (!('topic' in value) || value['topic'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('answers' in value) || value['answers'] === undefined) return false;
    return true;
}

export function TopicPublicFromJSON(json: any): TopicPublic {
    return TopicPublicFromJSONTyped(json, false);
}

export function TopicPublicFromJSONTyped(json: any, ignoreDiscriminator: boolean): TopicPublic {
    if (json == null) {
        return json;
    }
    return {
        
        'algorithm': json['algorithm'],
        'questionId': json['question_id'],
        'label': json['label'],
        'topic': json['topic'],
        'score': json['score'] == null ? undefined : json['score'],
        'id': json['id'],
        'answers': ((json['answers'] as Array<any>).map(AnswerFromJSON)),
    };
}

export function TopicPublicToJSON(json: any): TopicPublic {
    return TopicPublicToJSONTyped(json, false);
}

export function TopicPublicToJSONTyped(value?: TopicPublic | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'algorithm': value['algorithm'],
        'question_id': value['questionId'],
        'label': value['label'],
        'topic': value['topic'],
        'score': value['score'],
        'id': value['id'],
        'answers': ((value['answers'] as Array<any>).map(AnswerToJSON)),
    };
}

