/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AnswerPublicExtended } from './AnswerPublicExtended';
import {
    AnswerPublicExtendedFromJSON,
    AnswerPublicExtendedFromJSONTyped,
    AnswerPublicExtendedToJSON,
    AnswerPublicExtendedToJSONTyped,
} from './AnswerPublicExtended';
import type { TopicExtended } from './TopicExtended';
import {
    TopicExtendedFromJSON,
    TopicExtendedFromJSONTyped,
    TopicExtendedToJSON,
    TopicExtendedToJSONTyped,
} from './TopicExtended';
import type { SummaryPublic } from './SummaryPublic';
import {
    SummaryPublicFromJSON,
    SummaryPublicFromJSONTyped,
    SummaryPublicToJSON,
    SummaryPublicToJSONTyped,
} from './SummaryPublic';

/**
 * 
 * @export
 * @interface QuestionPublicFullAnalysis
 */
export interface QuestionPublicFullAnalysis {
    /**
     * 
     * @type {string}
     * @memberof QuestionPublicFullAnalysis
     */
    quizId: string;
    /**
     * 
     * @type {string}
     * @memberof QuestionPublicFullAnalysis
     */
    text: string;
    /**
     * 
     * @type {string}
     * @memberof QuestionPublicFullAnalysis
     */
    id: string;
    /**
     * 
     * @type {boolean}
     * @memberof QuestionPublicFullAnalysis
     */
    predefined: boolean;
    /**
     * 
     * @type {SummaryPublic}
     * @memberof QuestionPublicFullAnalysis
     */
    summary?: SummaryPublic | null;
    /**
     * 
     * @type {Array<AnswerPublicExtended>}
     * @memberof QuestionPublicFullAnalysis
     */
    answers?: Array<AnswerPublicExtended>;
    /**
     * 
     * @type {Array<TopicExtended>}
     * @memberof QuestionPublicFullAnalysis
     */
    topics?: Array<TopicExtended>;
}

/**
 * Check if a given object implements the QuestionPublicFullAnalysis interface.
 */
export function instanceOfQuestionPublicFullAnalysis(value: object): value is QuestionPublicFullAnalysis {
    if (!('quizId' in value) || value['quizId'] === undefined) return false;
    if (!('text' in value) || value['text'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('predefined' in value) || value['predefined'] === undefined) return false;
    return true;
}

export function QuestionPublicFullAnalysisFromJSON(json: any): QuestionPublicFullAnalysis {
    return QuestionPublicFullAnalysisFromJSONTyped(json, false);
}

export function QuestionPublicFullAnalysisFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuestionPublicFullAnalysis {
    if (json == null) {
        return json;
    }
    return {
        
        'quizId': json['quiz_id'],
        'text': json['text'],
        'id': json['id'],
        'predefined': json['predefined'],
        'summary': json['summary'] == null ? undefined : SummaryPublicFromJSON(json['summary']),
        'answers': json['answers'] == null ? undefined : ((json['answers'] as Array<any>).map(AnswerPublicExtendedFromJSON)),
        'topics': json['topics'] == null ? undefined : ((json['topics'] as Array<any>).map(TopicExtendedFromJSON)),
    };
}

export function QuestionPublicFullAnalysisToJSON(json: any): QuestionPublicFullAnalysis {
    return QuestionPublicFullAnalysisToJSONTyped(json, false);
}

export function QuestionPublicFullAnalysisToJSONTyped(value?: QuestionPublicFullAnalysis | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'quiz_id': value['quizId'],
        'text': value['text'],
        'id': value['id'],
        'predefined': value['predefined'],
        'summary': SummaryPublicToJSON(value['summary']),
        'answers': value['answers'] == null ? undefined : ((value['answers'] as Array<any>).map(AnswerPublicExtendedToJSON)),
        'topics': value['topics'] == null ? undefined : ((value['topics'] as Array<any>).map(TopicExtendedToJSON)),
    };
}

