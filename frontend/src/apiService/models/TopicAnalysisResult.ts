/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AnswerTopic } from './AnswerTopic';
import {
    AnswerTopicFromJSON,
    AnswerTopicFromJSONTyped,
    AnswerTopicToJSON,
    AnswerTopicToJSONTyped,
} from './AnswerTopic';
import type { Topic } from './Topic';
import {
    TopicFromJSON,
    TopicFromJSONTyped,
    TopicToJSON,
    TopicToJSONTyped,
} from './Topic';

/**
 * 
 * @export
 * @interface TopicAnalysisResult
 */
export interface TopicAnalysisResult {
    /**
     * 
     * @type {string}
     * @memberof TopicAnalysisResult
     */
    algorithm: string;
    /**
     * 
     * @type {Array<Topic>}
     * @memberof TopicAnalysisResult
     */
    topics: Array<Topic>;
    /**
     * 
     * @type {Array<AnswerTopic>}
     * @memberof TopicAnalysisResult
     */
    answers: Array<AnswerTopic>;
    /**
     * 
     * @type {number}
     * @memberof TopicAnalysisResult
     */
    score: number;
}

/**
 * Check if a given object implements the TopicAnalysisResult interface.
 */
export function instanceOfTopicAnalysisResult(value: object): value is TopicAnalysisResult {
    if (!('algorithm' in value) || value['algorithm'] === undefined) return false;
    if (!('topics' in value) || value['topics'] === undefined) return false;
    if (!('answers' in value) || value['answers'] === undefined) return false;
    if (!('score' in value) || value['score'] === undefined) return false;
    return true;
}

export function TopicAnalysisResultFromJSON(json: any): TopicAnalysisResult {
    return TopicAnalysisResultFromJSONTyped(json, false);
}

export function TopicAnalysisResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): TopicAnalysisResult {
    if (json == null) {
        return json;
    }
    return {
        
        'algorithm': json['algorithm'],
        'topics': ((json['topics'] as Array<any>).map(TopicFromJSON)),
        'answers': ((json['answers'] as Array<any>).map(AnswerTopicFromJSON)),
        'score': json['score'],
    };
}

export function TopicAnalysisResultToJSON(json: any): TopicAnalysisResult {
    return TopicAnalysisResultToJSONTyped(json, false);
}

export function TopicAnalysisResultToJSONTyped(value?: TopicAnalysisResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'algorithm': value['algorithm'],
        'topics': ((value['topics'] as Array<any>).map(TopicToJSON)),
        'answers': ((value['answers'] as Array<any>).map(AnswerTopicToJSON)),
        'score': value['score'],
    };
}

