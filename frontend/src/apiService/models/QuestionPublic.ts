/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface QuestionPublic
 */
export interface QuestionPublic {
    /**
     * 
     * @type {string}
     * @memberof QuestionPublic
     */
    quizId: string;
    /**
     * 
     * @type {string}
     * @memberof QuestionPublic
     */
    text: string;
    /**
     * 
     * @type {string}
     * @memberof QuestionPublic
     */
    id: string;
    /**
     * 
     * @type {boolean}
     * @memberof QuestionPublic
     */
    predefined: boolean;
}

/**
 * Check if a given object implements the QuestionPublic interface.
 */
export function instanceOfQuestionPublic(value: object): value is QuestionPublic {
    if (!('quizId' in value) || value['quizId'] === undefined) return false;
    if (!('text' in value) || value['text'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('predefined' in value) || value['predefined'] === undefined) return false;
    return true;
}

export function QuestionPublicFromJSON(json: any): QuestionPublic {
    return QuestionPublicFromJSONTyped(json, false);
}

export function QuestionPublicFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuestionPublic {
    if (json == null) {
        return json;
    }
    return {
        
        'quizId': json['quiz_id'],
        'text': json['text'],
        'id': json['id'],
        'predefined': json['predefined'],
    };
}

export function QuestionPublicToJSON(json: any): QuestionPublic {
    return QuestionPublicToJSONTyped(json, false);
}

export function QuestionPublicToJSONTyped(value?: QuestionPublic | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'quiz_id': value['quizId'],
        'text': value['text'],
        'id': value['id'],
        'predefined': value['predefined'],
    };
}

